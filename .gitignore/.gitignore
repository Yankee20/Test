const Discord = require('discord.js');

const client = new Discord.Client();

var prefix = "<";

const ytdl = require('ytdl-core');

const queue = new Map();

var servers = {};

client.login('NTIzNDg1NDg5NjM5MTk0NjM0.DvaR8g.kImASUsi_x42HeTPpvlAPSqyK-4');


function play(connection, message) {
    var server = servers[message.guild.id];

    server.dispatcher = connection.playSteam(ytdl(server.queue[0], {filter: "audioonly"}));

    server.queue.shift();

    server.dispatcher.on("end", function() {
        if (server.queue[0]) play(connection, message);

        else connection.disconnect();

        
    });
}



/*A quoi le bot joue*/
client.on("ready", () => {

    console.log("Je suis prêt !");
    client.user.setGame("Yankee c mon bb ptdr");

});

/*Musique*/


/*Kick*/
client.on('message',message =>{
    if (!message.guild) return
    let args = message.content.trim().split(/ +/g)
 
    if (args[0].toLocaleLowerCase() === prefix + 'kick'){
       if (!message.member.hasPermission('KICK_MEMBERS')) return message.channel.send("Vous pas avoir le droit de donner cet ordre à Neeko :poop: ;(")
       let member = message.mentions.members.first()
       if (!member) return message.channel.send("Neeko prête , mais Neeko pas avoir de cible :thinking:")
       if (member.highestRole.calculatedPosition >= message.member.highestRole.calculatedPosition && message.author.id !== message.guild.owner.id) return message.channel.send("Vous ne pouvez pas kick cet utilisateur :x:")
       if (!member.kickable) return message.channel.send("Neeko n'a pas le droit de faire cela :cry:")
       member.kick()
       message.channel.send("**"+member.user.username + 'Neeko a Exclu le vilain ** :white_check_mark:')
    }
});

/*Ban*/
client.on('message',message =>{
    if (!message.guild) return
    let args = message.content.trim().split(/ +/g)
 
    if (args[0].toLocaleLowerCase() === prefix + 'ban'){
       if (!message.member.hasPermission('BAN_MEMBERS')) return message.channel.send("Vous pas avoir le droit de donner cet ordre à Neeko :poop: ;(")
       let member = message.mentions.members.first()
       if (!member) return message.channel.send("Neeko prête , mais Neeko pas avoir de cible :thinking:")
       if (member.highestRole.calculatedPosition >= message.member.highestRole.calculatedPosition && message.author.id !== message.guild.owner.id) return message.channel.send("Vous ne pouvez pas bannir cet utilisateur :x:")
       if (!member.bannable) return message.channel.send("Neeko n'a pas le droit de faire cela :cry:")
       message.guild.ban(member, {days: 7})
       message.channel.send("**"+member.user.username + 'Neeko a Exclu le vilain ** :white_check_mark:')
    }
});

/*Clear et mute*/
client.on("message", message => {
    if (!message.guild) return
    let args = message.content.trim().split(/ +/g)
 
    if (args[0].toLowerCase() === prefix + "clear") {
        if (!message.member.hasPermission('MANAGE_MESSAGES')) return message.channel.send("Vous pas avoir le droit de donner cet ordre à Neeko :poop:")
        let count = args[1]
        if (!count) return message.channel.send("Combien de messages Neeko doit éliminer :thinking:")
        if (isNaN(count)) return message.channel.send("Veuillez indiquer à Neeko un nombre valide :shrug:")
        if (count < 1 || count > 100) return message.channel.send("Veuillez indiquer à Neeko un nombre entre 1 et 100 :shrug:")
        message.channel.bulkDelete(parseInt(count) + 1)
    }
 
    if (args[0].toLowerCase() === prefix + "mute") {
        if (!message.member.hasPermission('MANAGE_MESSAGES')) return message.channel.send("Vous pas avoir le droit de donner cet ordre à Neeko :poop:")
        let member = message.mentions.members.first()
        if (!member) return message.channel.send("Neeko ne trouve pas la cible :thinking:")
        if (member.highestRole.calculatedPosition >= message.member.highestRole.calculatedPosition && message.author.id !== message.guild.ownerID) return message.channel.send("Vous ne pouvez pas mute ce membre")
        if (member.highestRole.calculatedPosition >= message.guild.me.highestRole.calculatedPosition || member.id === message.guild.ownerID) return message.channel.send("Je ne peux pas mute ce membre")
        let muterole = message.guild.roles.find(role => role.name === 'Muted')
        if (muterole) {
            member.addRole(muterole)
            message.channel.send('Neeko a fermer la bouche à' + member + ':white_check_mark:')
        }
        else {
            message.guild.createRole({name: 'Muted', permissions: 0}).then((role) => {
                message.guild.channels.filter(channel => channel.type === 'text').forEach(channel => {
                    channel.overwritePermissions(role, {
                        SEND_MESSAGES: false
                    })
                })
                member.addRole(role)
                message.channel.send('Neeko a fermer la bouche à' + member + ':white_check_mark:')
            })
        }
    }
})

